swagger: '2.0'
info:
  description: >-
    The TurnOnline.biz REST API designed for cooperation with on-premise
    accounting system.
  version: '1'
  title: TurnOnline.biz On-premise Accounting API
  contact:
    name: TurnOnline.biz Team
    url: 'https://www.turnonline.biz'
    email: support@turnonline.biz
  license:
    name: LGPL-2.1
    url: >-
      https://github.com/turnonline/on-premise-accounting-api/blob/master/LICENSE
host: onpremise.swagger.io
basePath: /v1
tags:
  - name: Address book
    description: The on-premise accounting address book.
  - name: Number series
    description: The on-premise accounting number series management.
  - name: Billing unit
    description: The on-premise billing unit of measure used as product unit at invoice.
  - name: Product catalog
    description: The on-premise accounting product catalog.
  - name: Invoicing
    description: The on-premise invoicing.
schemes:
  - http
security:
  - Basic: []
paths:
  /contacts:
    post:
      tags:
        - Address book
      summary: Creates a new contact
      description: Creates a new contact in the address book. Duplicates are allowed.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ContactCard'
      responses:
        '201':
          description: Contact response
          schema:
            $ref: '#/definitions/ContactCard'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  '/contacts/{contactId}':
    get:
      tags:
        - Address book
      summary: Returns the contact
      description: Returns a single contact based on the supplied ID.
      produces:
        - application/json
      parameters:
        - name: contactId
          in: path
          description: The ID of contact to work with
          required: true
          type: string
      responses:
        '200':
          description: Contact response.
          schema:
            $ref: '#/definitions/ContactCard'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: >-
            The error when client tries to retrieve a resource that doesn't
            exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
    put:
      tags:
        - Address book
      summary: Updates the contact
      description: Updates the contact in on-premise accounting system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contactId
          in: path
          description: The ID of contact to work with
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ContactCard'
      responses:
        '201':
          description: Contact response
          schema:
            $ref: '#/definitions/ContactCard'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to update a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
    delete:
      tags:
        - Address book
      summary: Deletes the contact
      description: Deletes a single contact based on the supplied ID.
      parameters:
        - name: contactId
          in: path
          description: The ID of contact to work with
          required: true
          type: string
      responses:
        '204':
          description: Contact deleted
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to delete a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  /invoices:
    post:
      tags:
        - Invoicing
      summary: Creates a new invoice
      description: Creates a new invoice in on-premise accounting system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Invoice'
      responses:
        '201':
          description: Invoice response.
          schema:
            $ref: '#/definitions/Invoice'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  '/invoices/{invoiceId}':
    get:
      tags:
        - Invoicing
      summary: Returns the invoice
      description: >-
        Returns a single invoice based on the supplied ID in on-premise
        accounting system.
      produces:
        - application/json
      parameters:
        - name: invoiceId
          in: path
          description: The ID of invoice to work with
          required: true
          type: string
      responses:
        '200':
          description: Invoice response
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: >-
            The error when client tries to retrieve a resource that doesn't
            exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
    put:
      tags:
        - Invoicing
      summary: Updates the invoice
      description: >-
        Updates the invoice based on the supplied ID in on-premise accounting
        system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: invoiceId
          in: path
          description: The ID of invoice to work with
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Invoice'
      responses:
        '201':
          description: Invoice response.
          schema:
            $ref: '#/definitions/Invoice'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to update a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
    delete:
      tags:
        - Invoicing
      summary: Deletes the invoice
      description: Deletes a single invoice based on the supplied ID.
      parameters:
        - name: invoiceId
          in: path
          description: The ID of invoice to work with
          required: true
          type: string
      responses:
        '204':
          description: Invoice deleted
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to delete a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  /numberSeries:
    post:
      tags:
        - Number series
      summary: Creates a new number series
      description: Creates a new number series in on-premise accounting system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/NumberSeries'
      responses:
        '201':
          description: Number series response
          schema:
            $ref: '#/definitions/NumberSeries'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  '/numberSeries/{nsId}':
    put:
      tags:
        - Number series
      summary: Updates the number series
      description: Updates the number series in on-premise accounting system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: nsId
          in: path
          description: The ID of number series to work with
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/NumberSeries'
      responses:
        '201':
          description: Number series response
          schema:
            $ref: '#/definitions/NumberSeries'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to update a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  /products:
    post:
      tags:
        - Product catalog
      summary: Creates a new product
      description: Creates a new product in the product catalog.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Product'
      responses:
        '201':
          description: Product response
          schema:
            $ref: '#/definitions/Product'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  '/products/{productId}':
    get:
      tags:
        - Product catalog
      summary: Returns the product
      description: Returns a single product based on the supplied ID.
      produces:
        - application/json
      parameters:
        - name: productId
          in: path
          description: The ID of product to work with
          required: true
          type: string
      responses:
        '200':
          description: Product response
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: >-
            The error when client tries to retrieve a resource that doesn't
            exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
    put:
      tags:
        - Product catalog
      summary: Updates the product
      description: Updates the product in on-premise accounting system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: productId
          in: path
          description: The ID of product to work with
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Product'
      responses:
        '201':
          description: Product response
          schema:
            $ref: '#/definitions/Product'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to update a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
    delete:
      tags:
        - Product catalog
      summary: Deletes the product
      description: Deletes a single product based on the supplied ID.
      parameters:
        - name: productId
          in: path
          description: The ID of product to work with
          required: true
          type: string
      responses:
        '204':
          description: Product deleted
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to delete a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  /units:
    post:
      tags:
        - Billing unit
      summary: Creates a new billing unit
      description: Creates a new billing unit in on-premise accounting system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BillingUnit'
      responses:
        '201':
          description: Billing unit response
          schema:
            $ref: '#/definitions/BillingUnit'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
  '/units/{unitCode}':
    put:
      tags:
        - Billing unit
      summary: Updates the billing unit
      description: Updates the billing unit in on-premise accounting system.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: unitCode
          in: path
          description: The unique code of the billing unit to work with
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/BillingUnit'
      responses:
        '201':
          description: Billing unit response
          schema:
            $ref: '#/definitions/BillingUnit'
        '400':
          description: >-
            The error indicates that client has made a request that server
            couldn't understand. The client should not repeat the request
            without modifications.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The error when the authentication credential fails.
        '404':
          description: The error when client tries to update a resource that doesn't exist.
        '408':
          description: >-
            The server timed out processing of the request. The client may
            repeat the request without modifications at any later time.
        '500':
          description: >-
            It's a failure of the server. The client can repeat the request
            without modifications at any later time.
securityDefinitions:
  Basic:
    type: basic
definitions:
  BillingItem:
    type: object
    required:
      - amount
    properties:
      amount:
        type: number
        format: double
        description: The amount (quantity) of this billing item.
      discount:
        type: number
        format: double
        description: >-
          Defined in percentage. The final price will be calculated from price
          defined in product catalog.
      name:
        type: string
        description: >-
          The billing item name listed at invoice with corresponding billing
          unit and amount. If this billing item represents an item from product
          catalog (productId is present), this value takes precedence.
      price:
        type: number
        format: double
        description: >-
          The price for single unit (meaning amount 1.0 as a quantity). If this
          billing item represents an item from product catalog (productId is
          present), this value takes precedence. Negative value is allowed. The
          price is excluding VAT in case if company is VAT payer, otherwise
          price is final.
      productId:
        type: string
        description: >-
          The identification of the product taken from product catalog. If not
          provided all of the rest properties are mandatory.
      unit:
        description: The billing item unit.
        $ref: '#/definitions/BillingUnit'
      vatRate:
        description: The billing item VAT rate.
        $ref: '#/definitions/VatRate'
    description: >-
      The product represented as a billing item listed at invoice with
      corresponding billing unit and amount. The negative price is allowed.
  BillingUnit:
    type: object
    required:
      - code
    properties:
      code:
        type: string
        description: The code of the billing unit.
      name:
        type: string
        description: The name of the billing unit.
      type:
        type: string
        description: The type of the billing unit.
    description: The billing unit of measure used as product unit at invoice.
  ContactCard:
    type: object
    required:
      - company
      - vatPayer
    properties:
      businessName:
        type: string
        description: The company business name.
      city:
        type: string
        description: The city.
      company:
        type: boolean
        description: The boolean indication whether contact represents a business entity.
        default: false
      companyId:
        type: string
        description: The company business identification number.
      contactEmail:
        type: string
        description: >-
          The email address considered as a contact email used for notification
          purposes.
      country:
        type: string
        description: >-
          The contact ISO 3166 alpha-2 country code. It's case insensitive, but
          always sent as upper case.
      firstName:
        type: string
        description: The personal first name.
      id:
        type: string
        description: The contact card identification.
      lastName:
        type: string
        description: The personal last name.
      postalAddress:
        type: object
        description: >-
          If present, the contact postal address is not same as company/personal
          address.
        properties:
          businessName:
            type: string
            description: The company postal address business name.
          city:
            type: string
            description: The postal address city.
          country:
            type: string
            description: >-
              The contact's postal address ISO 3166 alpha-2 country code. It's
              case insensitive, but always sent as upper case.
          firstName:
            type: string
            description: The personal postal address first name.
          lastName:
            type: string
            description: The personal postal address last name.
          street:
            type: string
            description: The postal address street and street number.
          zip:
            type: string
            description: The postal address code.
      street:
        type: string
        description: The street and street number.
      taxId:
        type: string
        description: The tax payer identification number of the company.
      vatId:
        type: string
        description: >-
          The value added tax identification number (VAT ID) of the company.
          Provided if vatPayer property is true.
      vatPayer:
        type: boolean
        description: >-
          The boolean indication whether contact business entity is registered
          as VAT payer.
        default: false
      zip:
        type: string
        description: The postal code.
    description: Address book card that represents business partner contact.
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  Invoice:
    type: object
    required:
      - businessName
      - type
    properties:
      bankAccount:
        type: string
        description: >-
          The bank account identification. If provided, the bank account will be
          placed at invoice as a target account for the payment.
      businessName:
        type: string
        description: The business partner name.
      city:
        type: string
        description: The business partner city.
      companyId:
        type: string
        description: The business partner company identification number.
      constantSymbol:
        type: string
        description: The constant symbol. Country based limitation may apply.
      country:
        type: string
        description: >-
          The business partner ISO 3166 alpha-2 country code. It's case
          insensitive, but always sent as upper case.
      currencyCode:
        type: string
        description: >-
          The currency code based on the ISO 4217. If not provided default
          currency of the country will be applied.
      dateOfCharge:
        type: string
        format: date
        description: >-
          The date of charge. If no value is provided the current date will be
          used
      dateOfIssue:
        type: string
        format: date
        description: >-
          The date of issue. If no value is provided the current date will be
          used.
      dueDate:
        type: string
        format: date
        description: >-
          The due date. If not provided, the on-premise accounting system
          default will be applied.
      finalText:
        type: string
        description: The optional final text placed at invoice usually at the bottom.
      formOfPayment:
        description: The form of payment.
        $ref: '#/definitions/FormOfPayment'
      id:
        type: string
        description: The invoice identification.
      introductoryText:
        type: string
        description: >-
          The optional introductory text placed at invoice usually at top of the
          billing items.
      items:
        type: array
        description: >-
          The billing items listed at invoice. An empty list will result in zero
          value at invoice.
        items:
          $ref: '#/definitions/BillingItem'
      numberSeries:
        type: string
        description: >-
          The number series identification of the resource to be applied to
          increment invoice number. If not provided, the on-premise accounting
          system default will be applied.
      postalAddress:
        type: object
        description: 'If present, the invoice postal address is not same as company address.'
        properties:
          businessName:
            type: string
            description: The invoice postal address business name.
          city:
            type: string
            description: The invoice postal address city.
          country:
            type: string
            description: >-
              The invoice postal address ISO 3166 alpha-2 country code. It's
              case insensitive, but always sent as upper case.
          street:
            type: string
            description: The invoice postal address street.
          zip:
            type: string
            description: The invoice postal address postal code.
        required:
          - businessName
      rounding:
        description: >-
          The rounding mode. If not provided, the on-premise accounting system
          default will be applied.
        $ref: '#/definitions/RoundingMode'
      street:
        type: string
        description: The business partner street.
      taxId:
        type: string
        description: The business partner tax payer identification number.
      type:
        description: The invoice type.
        $ref: '#/definitions/InvoiceType'
      vatId:
        type: string
        description: >-
          The business partner company value added tax identification number
          (VAT ID). Provided if business partner company is registered as VAT
          payer, otherwise is considered as not VAT payer.
      zip:
        type: string
        description: The business partner postal code.
    description: >-
      The invoice definition. The final price always calculated by on-premise
      accounting system. General rule is; the prices are excluding VAT in case
      if company is VAT payer, otherwise prices are final.
  NumberSeries:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: The number series identification.
      name:
        type: string
        description: The name of the number series.
      periods:
        type: array
        items:
          $ref: '#/definitions/Period'
    description: >-
      The accounting number series as a definition of the invoice number
      increment.
  Period:
    type: object
    required:
      - code
    properties:
      code:
        type: string
        description: >-
          The accounting period's code, generally as a year. For example 4
          digits '2016'.
      current:
        type: string
        description: The current value of the increment.
      numberOfChars:
        type: integer
        format: int32
        description: The max number of characters or digits of the increment.
      postfix:
        type: string
        description: >-
          The number series postfix. Possible format either as static text or
          dynamic: for example %YY%.
      prefix:
        type: string
        description: >-
          The number series prefix. Possible format either as static text or
          dynamic: for example %YY%.
    description: Accounting period
  Product:
    type: object
    required:
      - name
      - price
      - unit
      - vatRate
    properties:
      code:
        type: string
        description: 'The product code, unique only per account.'
      description:
        type: string
        description: 'The product description, not appearing at invoice.'
      id:
        type: string
        description: The product identification.
      name:
        type: string
        description: >-
          The product name, very short summary placed at invoice as a billing
          item.
      price:
        type: number
        format: double
        description: >-
          The product catalog price. The price is excluding VAT in case if
          company is VAT payer, otherwise price is final.
      unit:
        description: The billing unit of measure at invoice.
        $ref: '#/definitions/BillingUnit'
      vatRate:
        description: The billing item VAT rate.
        $ref: '#/definitions/VatRate'
    description: >-
      The product catalog, the product to be listed at invoice as a billing item
      with corresponding billing unit and amount.
  FormOfPayment:
    type: string
    default: bankWire
    enum:
      - bankWire
      - paymentCard
      - cash
  InvoiceType:
    type: string
    description: >-
      The definition of type of invoice. A commercial invoice (valid tax
      document) is a true invoice. A pro forma invoice is not a true invoice;
      nothing has been billed by the business and has no financial obligation.
      The pro forma invoice is typically only used when a financial transaction
      has not yet taken place.
    default: proforma
    enum:
      - taxDocument
      - proforma
  RoundingMode:
    type: string
    description: 'Definition of rounding of prices at invoice, decimals.'
    default: hundredths
    enum:
      - thousandths
      - hundredths
      - tenths
      - ones
      - tens
      - hundreds
  VatRate:
    type: string
    description: The VAT rate definition to be applied to calculate the final price.
    default: standard
    enum:
      - standard
      - reduced
      - zero
