{
    "swagger": "2.0",
    "info": {
        "description": "The TurnOnline.biz REST API designed for cooperation with on-premise accounting system.",
        "version": "1",
        "title": "TurnOnline.biz On-premise Accounting API",
        "contact": {
            "name": "TurnOnline.biz Team",
            "url": "https://www.turnonline.biz",
            "email": "support@turnonline.biz"
        },
        "license": {
            "name": "LGPL-2.1",
            "url": "https://github.com/turnonline/on-premise-accounting-api/blob/master/LICENSE"
        }
    },
    "host": "localhost:8080",
    "basePath": "/onpremise/v1",
    "tags": [
        {
            "name": "Accounting system account"
        },
        {
            "name": "Address book",
            "description": "The on-premise accounting address book."
        },
        {
            "name": "Number series",
            "description": "The on-premise accounting number series management."
        },
        {
            "name": "Billing unit",
            "description": "The on-premise billing unit of measure used as product unit at invoice."
        },
        {
            "name": "Product catalog",
            "description": "The on-premise accounting product catalog."
        },
        {
            "name": "Invoicing",
            "description": "The on-premise invoicing."
        },
        {
            "name": "Bank"
        }
    ],
    "schemes": [
        "https"
    ],
    "security": [
        {
            "ApiKey": []
        }
    ],
    "paths": {
        "/accounts": {
            "post": {
                "tags": [
                    "Accounting system account"
                ],
                "summary": "Creates a new account",
                "description": "Creates a new account in accounting system.",
                "operationId": "createAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account response",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/accounts/{accountId}": {
            "get": {
                "tags": [
                    "Accounting system account"
                ],
                "summary": "Returns the account",
                "description": "Returns the accounting system account based on the supplied ID.",
                "operationId": "getAccount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The ID of account to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact response.",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to retrieve a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "put": {
                "tags": [
                    "Accounting system account"
                ],
                "summary": "Updates the account",
                "description": "Updates the account in accounting system.",
                "operationId": "updateAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The ID of account to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account response",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to update a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/bankAccounts": {
            "post": {
                "tags": [
                    "Bank"
                ],
                "summary": "Creates a new bank account",
                "operationId": "createBankAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bank account response",
                        "schema": {
                            "$ref": "#/definitions/BankAccount"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/bankAccounts/{bankAccountId}": {
            "put": {
                "tags": [
                    "Bank"
                ],
                "summary": "Updates the bank account",
                "operationId": "updateBankAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "bankAccountId",
                        "in": "path",
                        "description": "The ID of bank account to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bank account response",
                        "schema": {
                            "$ref": "#/definitions/BankAccount"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to update a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bank"
                ],
                "summary": "Deletes the bank account",
                "description": "Deletes a single bank account based on the supplied ID.",
                "operationId": "deleteBankAccount",
                "parameters": [
                    {
                        "name": "bankAccountId",
                        "in": "path",
                        "description": "The ID of bank account to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Bank account deleted."
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/contacts": {
            "post": {
                "tags": [
                    "Address book"
                ],
                "summary": "Creates a new contact",
                "description": "Creates a new contact in the address book. Duplicates are allowed.",
                "operationId": "createContact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContactCard"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Contact response",
                        "schema": {
                            "$ref": "#/definitions/ContactCard"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/contacts/{contactId}": {
            "get": {
                "tags": [
                    "Address book"
                ],
                "summary": "Returns the contact",
                "description": "Returns a single contact based on the supplied ID.",
                "operationId": "getContact",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The ID of contact to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact response.",
                        "schema": {
                            "$ref": "#/definitions/ContactCard"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to retrieve a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "put": {
                "tags": [
                    "Address book"
                ],
                "summary": "Updates the contact",
                "description": "Updates the contact in on-premise accounting system.",
                "operationId": "updateContact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The ID of contact to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContactCard"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Contact response",
                        "schema": {
                            "$ref": "#/definitions/ContactCard"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to update a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Address book"
                ],
                "summary": "Deletes the contact",
                "description": "Deletes a single contact based on the supplied ID.",
                "operationId": "deleteContact",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "The ID of contact to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contact deleted"
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/invoices": {
            "post": {
                "tags": [
                    "Invoicing"
                ],
                "summary": "Creates a new invoice",
                "description": "Creates a new invoice in on-premise accounting system.",
                "operationId": "createInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invoice response.",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/invoices/matches": {
            "get": {
                "tags": [
                    "Invoicing"
                ],
                "summary": "Returns matched payments",
                "operationId": "getInvoiceMatches",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payment matches.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentMatch"
                            }
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/invoices/{invoiceId}": {
            "get": {
                "tags": [
                    "Invoicing"
                ],
                "summary": "Returns the invoice",
                "description": "Returns a single invoice based on the supplied ID in on-premise accounting system.",
                "operationId": "getInvoice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "The ID of invoice to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice response",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to retrieve a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoicing"
                ],
                "summary": "Updates the invoice",
                "description": "Updates the invoice based on the supplied ID in on-premise accounting system.",
                "operationId": "updateInvoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "The ID of invoice to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invoice response.",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to update a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoicing"
                ],
                "summary": "Deletes the invoice",
                "description": "Deletes a single invoice based on the supplied ID.",
                "operationId": "deleteInvoice",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "The ID of invoice to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Invoice deleted."
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/invoices/{invoiceId}/payments": {
            "post": {
                "tags": [
                    "Invoicing"
                ],
                "summary": "Payment of the invoice",
                "description": "Payments related to invoice. It's possible to pay off the invoice with more payments.",
                "operationId": "createInvoicePayment",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "The ID of invoice to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Payment has been successfully done."
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/invoices/{invoiceId}/pdf": {
            "get": {
                "tags": [
                    "Invoicing"
                ],
                "summary": "Returns this invoice as PDF",
                "operationId": "getInvoicePdf",
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "The ID of invoice to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the invoice as PDF document",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/numberSeries": {
            "post": {
                "tags": [
                    "Number series"
                ],
                "summary": "Creates a new number series",
                "description": "Creates a new number series in on-premise accounting system.",
                "operationId": "createNumberSeries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NumberSeries"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Number series response",
                        "schema": {
                            "$ref": "#/definitions/NumberSeries"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/numberSeries/{nsId}": {
            "put": {
                "tags": [
                    "Number series"
                ],
                "summary": "Updates the number series",
                "description": "Updates the number series in on-premise accounting system.",
                "operationId": "updateNumberSeries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nsId",
                        "in": "path",
                        "description": "The ID of number series to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NumberSeries"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Number series response",
                        "schema": {
                            "$ref": "#/definitions/NumberSeries"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to update a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/products": {
            "post": {
                "tags": [
                    "Product catalog"
                ],
                "summary": "Creates a new product",
                "description": "Creates a new product in the product catalog.",
                "operationId": "createProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product response",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/products/{productId}": {
            "get": {
                "tags": [
                    "Product catalog"
                ],
                "summary": "Returns the product",
                "description": "Returns a single product based on the supplied ID.",
                "operationId": "getProduct",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The ID of product to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product response",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to retrieve a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "put": {
                "tags": [
                    "Product catalog"
                ],
                "summary": "Updates the product",
                "description": "Updates the product in on-premise accounting system.",
                "operationId": "updateProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The ID of product to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product response",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to update a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product catalog"
                ],
                "summary": "Deletes the product",
                "description": "Deletes a single product based on the supplied ID.",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The ID of product to work with",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted"
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to delete a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/units": {
            "post": {
                "tags": [
                    "Billing unit"
                ],
                "summary": "Creates a new billing unit",
                "description": "Creates a new billing unit in on-premise accounting system.",
                "operationId": "createBillingUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BillingUnit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Billing unit response",
                        "schema": {
                            "$ref": "#/definitions/BillingUnit"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        },
        "/units/{unitCode}": {
            "put": {
                "tags": [
                    "Billing unit"
                ],
                "summary": "Updates the billing unit",
                "description": "Updates the billing unit in on-premise accounting system.",
                "operationId": "updateBillingUnit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unitCode",
                        "in": "path",
                        "description": "The unique code of the billing unit to work with",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BillingUnit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Billing unit response",
                        "schema": {
                            "$ref": "#/definitions/BillingUnit"
                        }
                    },
                    "400": {
                        "description": "The error indicates that client has made a request that server couldn't understand. The client should not repeat the request without modifications.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "The error when the authentication credential fails."
                    },
                    "404": {
                        "description": "The error when client tries to update a resource that doesn't exist."
                    },
                    "408": {
                        "description": "The server timed out processing of the request. The client may repeat the request without modifications at any later time."
                    },
                    "500": {
                        "description": "It's a failure of the server. The client can repeat the request without modifications at any later time."
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKey": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "Account": {
            "type": "object",
            "required": [
                "businessName",
                "domicile",
                "legalForm",
                "vatPayer"
            ],
            "properties": {
                "billingAddress": {
                    "type": "object",
                    "description": "If present, the billing address is not same as company address.",
                    "properties": {
                        "businessName": {
                            "type": "string",
                            "description": "The billing business name."
                        },
                        "city": {
                            "type": "string",
                            "description": "The billing address city."
                        },
                        "country": {
                            "type": "string",
                            "description": "The billing address ISO 3166 alpha-2 country code. It's case insensitive, but always sent as upper case."
                        },
                        "street": {
                            "type": "string",
                            "description": "The billing address street and street number."
                        },
                        "zip": {
                            "type": "string",
                            "description": "The billing address code."
                        }
                    }
                },
                "businessName": {
                    "type": "string",
                    "description": "The company business name."
                },
                "city": {
                    "type": "string",
                    "description": "The company domicile city."
                },
                "companyId": {
                    "type": "string",
                    "description": "The company business identification number."
                },
                "contactFirstName": {
                    "type": "string",
                    "description": "The company contact first name."
                },
                "contactLastName": {
                    "type": "string",
                    "description": "The company contact last name."
                },
                "contactPrefix": {
                    "type": "string",
                    "description": "The company contact prefix."
                },
                "contactSuffix": {
                    "type": "string",
                    "description": "The company contact suffix."
                },
                "domicile": {
                    "type": "string",
                    "description": "The company ISO 3166 alpha-2 country code. It's case insensitive, but always sent as upper case."
                },
                "id": {
                    "type": "string",
                    "description": "The company account identification."
                },
                "legalForm": {
                    "type": "string",
                    "description": "The company legal form.",
                    "default": "ltd",
                    "enum": [
                        "ltd",
                        "soho",
                        "inc"
                    ]
                },
                "postalAddress": {
                    "type": "object",
                    "description": "If present, the postal address is not same as company address.",
                    "properties": {
                        "businessName": {
                            "type": "string",
                            "description": "The postal business name."
                        },
                        "city": {
                            "type": "string",
                            "description": "The postal address city."
                        },
                        "country": {
                            "type": "string",
                            "description": "The postal address ISO 3166 alpha-2 country code. It's case insensitive, but always sent as upper case."
                        },
                        "street": {
                            "type": "string",
                            "description": "The postal address street and street number."
                        },
                        "zip": {
                            "type": "string",
                            "description": "The postal address code."
                        }
                    }
                },
                "street": {
                    "type": "string",
                    "description": "The company street and street number."
                },
                "taxId": {
                    "type": "string",
                    "description": "The company tax payer identification number of the company."
                },
                "vatId": {
                    "type": "string",
                    "description": "The company value added tax identification number (VAT ID) of the company. Provided if vatPayer property is true."
                },
                "vatPayer": {
                    "type": "boolean",
                    "description": "The boolean indication whether company is registered as VAT payer.",
                    "default": false
                },
                "zip": {
                    "type": "string",
                    "description": "The company postal code."
                }
            }
        },
        "BankAccount": {
            "type": "object",
            "required": [
                "iban",
                "primary"
            ],
            "properties": {
                "bic": {
                    "type": "string",
                    "description": "The bank BIC (Bank Identifier Code) or SWIFT code."
                },
                "currency": {
                    "type": "string",
                    "description": "The bank account currency code based on the ISO 4217."
                },
                "iban": {
                    "type": "string",
                    "description": "The international bank account number."
                },
                "id": {
                    "type": "string",
                    "description": "The bank account identification."
                },
                "name": {
                    "type": "string",
                    "description": "The bank account name."
                },
                "primary": {
                    "type": "boolean",
                    "description": "The boolean indicating whether this bank account is being marked as primary regarding invoicing. There is only single bank account allowed to be marked as primary. The primary bank account will be listed at invoice as a target account for the payment.",
                    "default": false
                }
            },
            "description": "The bank account resource that represents an opened account in the bank (signed contract) that is owned by company."
        },
        "BillingItem": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount (quantity) of this billing item."
                },
                "discount": {
                    "type": "number",
                    "format": "double",
                    "description": "Defined in percentage. The final price will be calculated from price defined in product catalog."
                },
                "name": {
                    "type": "string",
                    "description": "The billing item name listed at invoice with corresponding billing unit and amount. If this billing item represents an item from product catalog (productId is present), this value takes precedence."
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price for single unit (meaning amount 1.0 as a quantity). If this billing item represents an item from product catalog (productId is present), this value takes precedence. Negative value is allowed. The price is excluding VAT in case if company is VAT payer, otherwise price is final."
                },
                "productId": {
                    "type": "string",
                    "description": "The identification of the product taken from product catalog. If not provided all of the rest properties are mandatory."
                },
                "unit": {
                    "type": "string",
                    "description": "The unit code taken from the billing unit codebook."
                },
                "vatRate": {
                    "description": "The billing item VAT rate.",
                    "$ref": "#/definitions/VatRate"
                }
            },
            "description": "The product represented as a billing item listed at invoice with corresponding billing unit and amount. The negative price is allowed."
        },
        "BillingUnit": {
            "type": "object",
            "required": [
                "code",
                "name",
                "type"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The unique code (only per account) of the billing unit."
                },
                "name": {
                    "type": "string",
                    "description": "The localized name of the billing unit."
                },
                "type": {
                    "description": "The type of the billing unit.",
                    "$ref": "#/definitions/UnitType"
                }
            },
            "description": "The billing unit of measure used as product unit at invoice."
        },
        "ContactCard": {
            "type": "object",
            "required": [
                "company",
                "vatPayer"
            ],
            "properties": {
                "businessName": {
                    "type": "string",
                    "description": "The company business name."
                },
                "city": {
                    "type": "string",
                    "description": "The city."
                },
                "company": {
                    "type": "boolean",
                    "description": "The boolean indication whether contact represents a business entity.",
                    "default": false
                },
                "companyId": {
                    "type": "string",
                    "description": "The company business identification number."
                },
                "contactEmail": {
                    "type": "string",
                    "description": "The email address considered as a contact email used for notification purposes."
                },
                "country": {
                    "type": "string",
                    "description": "The contact ISO 3166 alpha-2 country code. It's case insensitive, but always sent as upper case."
                },
                "firstName": {
                    "type": "string",
                    "description": "The personal first name."
                },
                "id": {
                    "type": "string",
                    "description": "The contact card identification."
                },
                "lastName": {
                    "type": "string",
                    "description": "The personal last name."
                },
                "postalAddress": {
                    "type": "object",
                    "description": "If present, the contact postal address is not same as company/personal address.",
                    "properties": {
                        "businessName": {
                            "type": "string",
                            "description": "The company postal address business name."
                        },
                        "city": {
                            "type": "string",
                            "description": "The postal address city."
                        },
                        "country": {
                            "type": "string",
                            "description": "The contact's postal address ISO 3166 alpha-2 country code. It's case insensitive, but always sent as upper case."
                        },
                        "firstName": {
                            "type": "string",
                            "description": "The personal postal address first name."
                        },
                        "lastName": {
                            "type": "string",
                            "description": "The personal postal address last name."
                        },
                        "street": {
                            "type": "string",
                            "description": "The postal address street and street number."
                        },
                        "zip": {
                            "type": "string",
                            "description": "The postal address code."
                        }
                    }
                },
                "street": {
                    "type": "string",
                    "description": "The street and street number."
                },
                "taxId": {
                    "type": "string",
                    "description": "The tax payer identification number of the company."
                },
                "vatId": {
                    "type": "string",
                    "description": "The value added tax identification number (VAT ID) of the company. Provided if vatPayer property is true."
                },
                "vatPayer": {
                    "type": "boolean",
                    "description": "The boolean indication whether contact business entity is registered as VAT payer.",
                    "default": false
                },
                "zip": {
                    "type": "string",
                    "description": "The postal code."
                }
            },
            "description": "The contact that represents a business partner. At least one of the value must be provided; either businessName or lastName."
        },
        "Deduction": {
            "type": "object",
            "required": [
                "invoiceNumber",
                "settlement"
            ],
            "properties": {
                "invoiceNumber": {
                    "type": "string",
                    "description": "The settlement of invoice with advance invoice number."
                },
                "settlement": {
                    "type": "number",
                    "format": "double",
                    "description": "The total amount of the payment related to this advance invoice."
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Invoice": {
            "type": "object",
            "required": [
                "businessName",
                "type"
            ],
            "properties": {
                "bankAccountId": {
                    "type": "string",
                    "description": "The identification of the bank account to be assigned. The bank account will be listed at invoice as a target account for the payment. If none selected, a bank account marked as primary from the current list will be assigned if any."
                },
                "businessName": {
                    "type": "string",
                    "description": "The business partner name. This value is being rendered as either a company name or personal name."
                },
                "city": {
                    "type": "string",
                    "description": "The business partner city."
                },
                "companyId": {
                    "type": "string",
                    "description": "The business partner company identification number."
                },
                "constantSymbol": {
                    "type": "string",
                    "description": "The constant symbol. Country based limitation may apply."
                },
                "country": {
                    "type": "string",
                    "description": "The business partner ISO 3166 alpha-2 country code. It's case insensitive, but always sent as upper case."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency code based on the ISO 4217. If not provided, the default currency of the country will be applied."
                },
                "dateOfCharge": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of charge. If no value is provided the current date will be used. RFC 3339"
                },
                "dateOfIssue": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of issue. If no value is provided the current date will be used. RFC 3339"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The due date. If not provided, the on-premise accounting system default will be applied. RFC 3339"
                },
                "finalText": {
                    "type": "string",
                    "description": "The optional final text placed at invoice usually at the bottom."
                },
                "formOfPayment": {
                    "description": "The form of payment listed at invoice. This is the only expected form of payment, not a real one. The real form of payment will be defined by Payment. paid property.",
                    "$ref": "#/definitions/FormOfPayment"
                },
                "id": {
                    "type": "string",
                    "description": "The invoice identification."
                },
                "introductoryText": {
                    "type": "string",
                    "description": "The optional introductory text placed at invoice usually at top of the billing items."
                },
                "items": {
                    "type": "array",
                    "description": "The billing items listed at invoice. An empty list will result in zero value at invoice.",
                    "items": {
                        "$ref": "#/definitions/BillingItem"
                    }
                },
                "numberSeries": {
                    "type": "string",
                    "description": "The number series identification (ID) of the resource to be applied to increment invoice number. If not provided, the on-premise accounting system default will be applied."
                },
                "postalAddress": {
                    "type": "object",
                    "description": "If present, the invoice postal address is not same as company address.",
                    "properties": {
                        "businessName": {
                            "type": "string",
                            "description": "The invoice postal address business name."
                        },
                        "city": {
                            "type": "string",
                            "description": "The invoice postal address city."
                        },
                        "country": {
                            "type": "string",
                            "description": "The invoice postal address ISO 3166 alpha-2 country code. It's case insensitive, but always sent as upper case."
                        },
                        "street": {
                            "type": "string",
                            "description": "The invoice postal address street."
                        },
                        "zip": {
                            "type": "string",
                            "description": "The invoice postal address postal code."
                        }
                    },
                    "required": [
                        "businessName"
                    ]
                },
                "rounding": {
                    "description": "The rounding mode. If not provided, the on-premise accounting system default will be applied.",
                    "$ref": "#/definitions/RoundingMode"
                },
                "street": {
                    "type": "string",
                    "description": "The business partner street."
                },
                "taxId": {
                    "type": "string",
                    "description": "The business partner tax payer identification number."
                },
                "type": {
                    "description": "The invoice type.",
                    "$ref": "#/definitions/InvoiceType"
                },
                "vatId": {
                    "type": "string",
                    "description": "The business partner company value added tax identification number (VAT ID). Provided if business partner company is registered as VAT payer, otherwise is considered as not VAT payer."
                },
                "zip": {
                    "type": "string",
                    "description": "The business partner postal code."
                },
                "contactId": {
                    "type": "string",
                    "description": "The contact ID of the business partner taken from the address book. The business partner properties provided with this invoice resource has always higher priority against values from the address book. If some of the values are missing at invoice, can be filled in."
                },
                "contactEmail": {
                    "type": "string",
                    "description": "The business partner contact email."
                },
                "invoiceNumber": {
                    "type": "string",
                    "description": "The invoice number generated by accounting  system."
                },
                "paymentKey": {
                    "type": "string",
                    "description": "The payment key as an ID to identify incoming payment related to this invoice. Generated at the client side. It may be the same value as the variable symbol, but not necessarily."
                },
                "variableSymbol": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The variable symbol generated by accounting system. The ID to identify incoming payment limited to 10 digits."
                },
                "firstName": {
                    "type": "string",
                    "description": "The business partner personal first name."
                },
                "lastName": {
                    "type": "string",
                    "description": "The business partner personal last name."
                },
                "amountForPayment": {
                    "type": "number",
                    "format": "double",
                    "description": "The final amount for payment."
                },
                "deduction": {
                    "type": "array",
                    "description": "Deduction of advance invoice.",
                    "items": {
                        "$ref": "#/definitions/Deduction"
                    }
                }
            },
            "description": "The invoice definition. The final price always calculated by on-premise accounting system. General rule is; the prices are excluding VAT in case if company is VAT payer, otherwise prices are final."
        },
        "NumberSeries": {
            "type": "object",
            "required": [
                "name",
                "periods"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The number series identification."
                },
                "name": {
                    "type": "string",
                    "description": "The unique name (code) of the number series."
                },
                "periods": {
                    "type": "array",
                    "description": "There always must be a period for current year.",
                    "items": {
                        "$ref": "#/definitions/Period"
                    }
                }
            },
            "description": "The accounting number series as a definition of the invoice number increment."
        },
        "Payment": {
            "type": "object",
            "required": [
                "amount",
                "credit",
                "currency",
                "paid",
                "paymentKey"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The transaction amount absolute value."
                },
                "credit": {
                    "type": "boolean",
                    "description": "The boolean indicating whether the payment has positive or negative amount; true - credit, false - debit.",
                    "default": false
                },
                "currency": {
                    "type": "string",
                    "description": "The payment currency code based on the ISO 4217."
                },
                "paid": {
                    "description": "The form of payment how this payment has been done.",
                    "$ref": "#/definitions/FormOfPayment"
                },
                "paymentKey": {
                    "type": "string",
                    "description": "The unique payment identification related to this invoice."
                }
            },
            "description": "The payment that represents either a credit or debit transaction."
        },
        "PaymentMatch": {
            "type": "object",
            "required": [
                "invoiceNumber",
                "settlementInvoice"
            ],
            "properties": {
                "invoiceNumber": {
                    "type": "string",
                    "description": "Settlement of outstanding invoice with advance invoice number."
                },
                "settlementInvoice": {
                    "type": "string",
                    "description": "The ID of settlement invoice, the invoice with final amount to pay: zero."
                },
                "paymentKeys": {
                    "type": "array",
                    "description": "One or more unique payment identifications related to this invoice.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Settling invoices is the process of matching payments with invoices. A payment can be a full payment on an invoice, a partial payment, or a payment for several invoices."
        },
        "Period": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The accounting period code defined as a year by 4 digits. For example '2016'."
                },
                "current": {
                    "type": "string",
                    "description": "The current value of the increment. In case of the new definition means a starting value. If not provided, the on-premise accounting system default will be applied."
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of characters or digits of the increment. If not provided, the on-premise accounting system default will be applied."
                },
                "postfix": {
                    "type": "string",
                    "description": "The number series postfix. Possible format either as static text or dynamic: for example %YY%."
                },
                "prefix": {
                    "type": "string",
                    "description": "The number series prefix. Possible format either as static text or dynamic: for example %YY%."
                }
            },
            "description": "The resource that represents a definition of the invoice number increment for current accounting period. Updated annually by on-premise accounting system."
        },
        "Product": {
            "type": "object",
            "required": [
                "name",
                "price",
                "unit",
                "vatRate"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The product code, unique only per account."
                },
                "description": {
                    "type": "string",
                    "description": "The product description, not appearing at invoice. This value does not have to be persisted."
                },
                "id": {
                    "type": "string",
                    "description": "The product identification."
                },
                "name": {
                    "type": "string",
                    "description": "The product name, very short summary placed at invoice as a billing item."
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "The product catalog price. The price is excluding VAT in case if company is VAT payer, otherwise price is final."
                },
                "unit": {
                    "type": "string",
                    "description": "The billing unit code - unit of measure at invoice. Taken from the billing unit codebook."
                },
                "vatRate": {
                    "description": "The billing item VAT rate.",
                    "$ref": "#/definitions/VatRate"
                },
                "subsidiary": {
                    "type": "object",
                    "description": "An optional subsidiary properties of the product. An arbitrary map of values that are specific to the concrete accounting system in order to help process this product as a billing item in the accounting.",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "description": "The product from product catalog to be listed at invoice as a billing item with corresponding billing unit and amount."
        },
        "FormOfPayment": {
            "type": "string",
            "description": "The enumeration of the form of payments.",
            "default": "bankWire",
            "enum": [
                "bankWire",
                "paymentCard",
                "cash"
            ]
        },
        "InvoiceType": {
            "type": "string",
            "description": "The definition of type of invoice. A commercial invoice (valid tax document) is a true invoice. A pro forma invoice is not a true invoice; nothing has been billed by the business and has no financial obligation.",
            "default": "proforma",
            "enum": [
                "taxDocument",
                "proforma"
            ]
        },
        "RoundingMode": {
            "type": "string",
            "description": "Definition of rounding of prices at invoice, decimals.",
            "default": "hundredths",
            "enum": [
                "thousandths",
                "hundredths",
                "tenths",
                "ones",
                "tens",
                "hundreds"
            ]
        },
        "UnitType": {
            "type": "string",
            "description": "Unit type enumeration; subscription (time interval), service, item (pieces).",
            "default": "item",
            "enum": [
                "subscription",
                "service",
                "item"
            ]
        },
        "VatRate": {
            "type": "string",
            "description": "The VAT rate definition to be applied to calculate the final price.",
            "default": "standard",
            "enum": [
                "standard",
                "reduced",
                "zero"
            ]
        }
    }
}